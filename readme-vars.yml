---

# project information
project_name: diskover
project_url: "https://github.com/diskoverdata/diskover-community"
project_logo: "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png"
project_blurb: "[{{ project_name }}]({{ project_url }}) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# container parameters
common_param_env_vars_enabled: true #PGID, PUID, etc
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "Persistent config files" }
  - { vol_path: "/data", vol_host_path: "/path/to/{{ project_name }}/data", desc: "Default mount point to crawl" }
param_usage_include_ports: true
param_ports:
  - { external_port: "80", internal_port: "80", port_desc: "diskover Web UI" }
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "America/New_York", desc: "Specify a timezone to use EG America/New_York"}
  - { env_var: "ES_HOST", env_value: "elasticsearch", desc: "ElasticSearch host (optional)"}
  - { env_var: "ES_PORT", env_value: "9200", desc: "ElasticSearch port (optional)"}
  - { env_var: "ES_USER", env_value: "elastic", desc: "ElasticSearch username (optional)"}
  - { env_var: "ES_PASS", env_value: "changeme", desc: "ElasticSearch password (optional)"}

custom_compose: |
  version: '2'
  services:
    diskover:
      image: ghcr.io/linuxserver/diskover
      container_name: diskover
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=America/New_York
        - ES_HOST=elasticsearch
        - ES_PORT=9200
      volumes:
        - /path/to/diskover/config:/config
        - /path/to/diskover/data:/data
      ports:
        - 80:80
      mem_limit: 4096m
      restart: unless-stopped
      depends_on:
        - elasticsearch
    elasticsearch:
      container_name: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=true
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - /path/to/esdata:/usr/share/elasticsearch/data
      ports:
        - 9200:9200
      depends_on:
        - elasticsearch-helper
      restart: unless-stopped
    elasticsearch-helper:
      image: alpine
      command: sh -c "sysctl -w vm.max_map_count=262144"
      privileged: true

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  This application is dependent on an ElasticSearch instance. Please see the example compose file for additional information.

  The default username is diskover with the password of **darkdata**, access the container at http://<host-ip>/. The UI may be unusable until a valid index has been created.
  
  The default diskover-web Constants.php file located at `/config/diskover-web.conf.d/Constants.php` will need to be edited to allow diskover-web to communicate with the ElasticSearch container. The following entries will need to be edited:
  * `const ES_HOST = elasticsearch`
  * `const ES_PORT = 9200`

  The application doesn't start an index by default. A crontab is created inside of the `/config` directory and can be set up to run automated indexes of `/data`. Changes to this crontab file require a restart to apply. You can also manually run an index by executing `/app/diskover/diskover.py` either in interactive or detached mode:

  * `docker exec -u abc -d diskover python3 /app/diskover/diskover.py -i diskover-my_index_name /data` Will run an index in the background
  * `docker exec -u abc -it diskover python3 /app/diskover/diskover.py -i diskover-my_index_name /data` Will run an index in the foreground

# changelog
changelogs:
  - { date: "31.10.21:", desc: "Added xpack.security variable to ElasticSearch; added instructions to edit Constants.php in diskover; corrected command needed to manually generate an index in diskover" }
  - { date: "11.10.21:", desc: "Updated to diskover-community v2." }
  - { date: "19.11.20:", desc: "Fix pip packages." }
  - { date: "19.12.19:", desc: "Rebasing to alpine 3.11." }
  - { date: "28.06.19:", desc: "Rebasing to alpine 3.10." }
  - { date: "12.04.19:", desc: "Rebase to Alpine 3.9." }
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "01.11.18:", desc: "Initial Release." }
